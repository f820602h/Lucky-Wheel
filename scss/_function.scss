//color-select
@function color($key,$a:1){
  @return change-color($color: map-get($color, $key), $alpha: $a)
};

//gray-select
@function gray($code16){
   @return '##{$code16}#{$code16}#{$code16}'
};

//line-height
@function rhythm($fontSize){
    @return ceil($fontSize * $baseLinePadding / $baseLineHeight) * $baseLineHeight;
};

//font-size
@function fontSize($sizeLevel){
    $size: nth($fontSize, $sizeLevel);
    @return $size;
};

//font-size-rwd
@function fontSizeRwd($sizeLevel, $multiple){
    $size: nth($fontSize, $sizeLevel);
    $rwdSize: $size - $baseFontSize * $multiple;
    @return $rwdSize;
};

//font-weight
@function fontWeight($weightLevel){
    @if $weightLevel < 1 { $weightLevel: 1; }
    @else if $weightLevel > 9 { $weightLevel: 9; }
    @return 100 * $weightLevel;
}


//background
@function bgPosition($position){
    @if $position == center{
        @return center;
    }@else if $position == top{
        @return center top;
    }@else if $position == left{
        @return left center;
    }@else if $position == right{
        @return right center;
    }
    
}

//gutter
@function getGutter($level){
    @if $level == a{
        @return auto;
    } @else {
        @return $baseGutter * $level;
    }
}

//media query
@function media($size){
    @return map-get($breakpoint, $size)
};

//grid-system
@function colWidth($col: 1) {
    $cols: 12 !default;
    $gutter: 10px !default;
    @if $col <1 {
        $col: 1;
    } @else if $col > $cols {
        $col: $cols;
    }
    @return calc(100% / #{$cols} * #{$col} - #{getGutter(2)});
}